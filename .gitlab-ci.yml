deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  environment:
    name: production
  script:
    - kubectl version
    - echo -n $KUBE_CONFIG | base64 -d > ./config
    - kubectl get pods
    - kubectl apply -f dvwa-dep.yml
variables:
  KUBE_CONFIG: "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkplVTFFVFhsTmFrVjNUVlJqTVU0eGIxaEVWRTE1VFVSTmVFOVVSWGROVkdNeFRqRnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVG5wekNrc3lVWEpVZVhKeFZUbENlbkJuVEdweGNIQjNRV3A0T0VRNVdtVTBkV0psZVdOdFlVaDNjWFpYU1hoSVQxUlBMM1ppS3l0U01rUm1aMnBhZURReWMya0tjakJPWjFOeGIwZFdjWGhVTlhabFZYY3ZjakZ4TVdsdmVtWXpXamw2ZDNWbFpFa3JSWGxQYkhFMmJDOTViSGMwWjFOcU1tNXRhRmgwTW1oU01tMVRXQXAxYm1KamRGaFpkRXQwT1hOYWRVdDBTUzl6THk5aVV6SjFZbUZLU2tsU1FVSjNRWEl5YVhaaVdXMHdZbU5RUnpRMGNUaHBURWc0WnpCdFkyNVVkbEEwQ25sWGNFSkdRM1IzYUVOUk5WcGFUbUpSWlVabWJqY3JZMUE1WkhGdU5VaHNhUzl5ZUZnd1NWVmFkMUJhZURrNGQwdHFTRmh3VmpaWFQyRk9ZV0pxT1dVS2JIQllPV0UzYUZFNGQzVnNSa05vTm5RdmRWQXdVbkZUVVdsUFprSTJjbTg1VUVoQmJWTndXVlpYYlVkck5WWk9kVlptT0dvNVEwUXpSVFJoZURGT2VncDVha0U1TW1wR1pqUm1SVUpNYkdVdllVcE5RMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkZhMnNyVFhWdmNrMWlWamRoTmt4amVGWkVlbXhqVUZZemFuTk5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCU1RjNWIweGlWblF5YTA1ak5rOHdkMVJhV0FvcmJtSklSVmxqZFU1Q01HbE5TMnB1VTJoT1VFUnhTVXBoVkZVdmF6TkdhVTVHTUhsSWVtbHNXazF3ZFZCeVNWZDFWbTlKVDNwbmFsWTBZa2xOYkZaSUNqUXdaek5tY25KSFJYVkZSVVl3UmtoSlNtOHJhbkpIU1hkdlIyWkVWbXM1Ylc1U2NrVTBLM1ZPWTJ4Q1NEZHlNamhaU25Kb2VUZGlXamx5TW1kVWIxY0tVRGREZVRseGMwY3haamQwWjNGaEwzZElLMVF5U0VGUFVtWlVaa0Z2YW5Ob1NrMURUVUZXTTI1SFZIUlZWalpuVldOTmMyOVFNVzE1VVdaME9FdExjZ3BEY1d4Mk5ETldTbXRqWkdSdlIxcDZWV3B6WWpkQ1JYTmljMWxwUWxOaFNETklUMHRhUzNkTGMxQjJTaTh6T0Uxb1RXVTRiREExVW5kWGJtMWxTRGxPQ20xV00zZHNORXBDUm5rNFlsRTFNWGhFYkU1RlRqWkdTa3BZT1hCWk1URXpTMUJNVEZwclZIZHFjMEZ2ZURGaWNVcGhiMVJSVlVKalRDdDZaa0pEU0hZS2NIUjNQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBzZXJ2ZXI6IGh0dHBzOi8vNTQuMTk1LjE1Ny4xODU6NjQ0MwogIG5hbWU6IGt1YmVybmV0ZXMKY29udGV4dHM6Ci0gY29udGV4dDoKICAgIGNsdXN0ZXI6IGt1YmVybmV0ZXMKICAgIHVzZXI6IGt1YmVybmV0ZXMtYWRtaW4KICBuYW1lOiBrdWJlcm5ldGVzLWFkbWluQGt1YmVybmV0ZXMKY3VycmVudC1jb250ZXh0OiBrdWJlcm5ldGVzLWFkbWluQGt1YmVybmV0ZXMKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBrdWJlcm5ldGVzLWFkbWluCiAgdXNlcjoKICAgIGNsaWVudC1jZXJ0aWZpY2F0ZS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSSlZFTkRRV2R0WjBGM1NVSkJaMGxKVkV0aVJYQlZWWEZKTDBGM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEdWRVZVVFVKRlIwRXhWVVVLUVhoTlMyRXpWbWxhV0VwMVdsaFNiR042UVdWR2R6QjVUV3BCZWsxcVNYaE5SRVV6VGxSa1lVWjNNSGxOZWtGNlRXcEplRTFFUlROT1ZHeGhUVVJSZUFwR2VrRldRbWRPVmtKQmIxUkViazQxWXpOU2JHSlVjSFJaV0U0d1dsaEtlazFTYTNkR2QxbEVWbEZSUkVWNFFuSmtWMHBzWTIwMWJHUkhWbnBNVjBackNtSlhiSFZOU1VsQ1NXcEJUa0puYTNGb2EybEhPWGN3UWtGUlJVWkJRVTlEUVZFNFFVMUpTVUpEWjB0RFFWRkZRWHBIVFhvdmFXNUhXR1JzT0ZKTGNYVUtWa0l4Wm5wRGNteEtSRUZ3ZFhWb2MyTnRObFJXVUhWTlpVcHhZWE42VURsSU1HdHVhMmxNUVNzd1dHaEpjazlITUhoUFVFNHhLMVpWU1VKVVRIQjJSd3BOZDFweFEyNXdlbWhTY2k5a1F6WXdlaTlKVjNkUFJrbHdlamROZFd4c1ZGcE1kSGMzVUN0dk5uRk5hMmhVWnpVeE4wdFdVRGRyU1U4d1JrcFdZMDlsQ21GSWNFMTZUVVJPWlRKSWNHSjRiMnBpTTJOelJpdDJkalJGV1daRGNYaFNhbFp3ZHpCUmRsWXJkbnBTVW1WVVRESk1TbEZ3U2xrMVVGaEdZVmxIYVhFS1ZETnFaV2wxU1ZGUmVWWldhVUkxY21KeE5FVTRUbGhtVkVOYU5GcHliek5YSzFkQ1RrOWlhRUpyWlRWRlkwcEdMelJwWmxveGJWaHlia3h6WVhoa1pRcE9aamQxYlM5eVNuQnVVVzVOWTBKUGJDOUhOVFV4UTB0Q2NUTXlVVGRFVW1jNFVtZHBSRTkwYm5ac1dVOHJRM1V2Tm1sRE5tdDVaa3N5TDB0dVRXWlZDbWQwZW1saWQwbEVRVkZCUW04eFdYZFdSRUZQUW1kT1ZraFJPRUpCWmpoRlFrRk5RMEpoUVhkRmQxbEVWbEl3YkVKQmQzZERaMWxKUzNkWlFrSlJWVWdLUVhkSmQwUkJXVVJXVWpCVVFWRklMMEpCU1hkQlJFRm1RbWRPVmtoVFRVVkhSRUZYWjBKU1NrcFFha3h4UzNwSE1XVXlkV2t6VFZaUk9EVllSREZrTkFvM1JFRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQlNFRTNSVXBNUkhoTk9XNHJOazFIVGxONE1UaE1Vakl5WkhwWFFVMW9NemxSWTFGbUNqQlNjM1EwVTNZMVJHYzJlRmsxYWxWNllqaGhNRW95TUhoQ2VtaE5NR3RrYkVZMWRFRlhkVlZKZVhsMlltUkplbUZ5Ym5FMU9IUmlTV3Q2U3pselZVVUtRV2MyUkdobVRUVldXWGwxUm1kMVRUbG9jR3BhU1RWQlJUZEVTWEJoTkhKaFVHczJVblpEZWtaRFMwWjZNQ3Q2YW1aQ2VtdElXV2w2T0V0WGFYRnpOUXBtTTNkTFIzaEdWazl6ZGxsb2JHNUJaR05CVkdZelUwNVJSbTVvTTFKNVNHSTFPVGhWUXpWTFZWZGhUV2RDYkU1dlNHeGFkVzl0VVd0bU1UTnhVMlpQQ2pCSlEwRXJRbTgwZWxSRU1WRXdRM0pKYm5wQ2NHY3JaVWRQUXl0SVMwcHBPV2RIY0U5UFNUVTJla2t5U0VvME1ESktTVTFJT1RCMmVHTkVTRVUwYzB3S1R6VkZOR2xXVmpWeWRsQmFNVVJ0V0cxUFRtWTJPVW92UW1SNVNVRk1NbXhFUkRKNWJtYzNTbGxPZW1kTFdXSndZVUU5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQogICAgY2xpZW50LWtleS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZjRkZKUWtGQlMwTkJVVVZCZWtkTmVpOXBia2RZWkd3NFVrdHhkVlpDTVdaNlEzSnNTa1JCY0hWMWFITmpiVFpVVmxCMVRXVktjV0Z6ZWxBNUNrZ3dhMjVyYVV4Qkt6QllhRWx5VDBjd2VFOVFUakVyVmxWSlFsUk1jSFpIVFhkYWNVTnVjSHBvVW5JdlpFTTJNSG92U1ZkM1QwWkpjSG8zVFhWc2JGUUtXa3gwZHpkUUsyODJjVTFyYUZSbk5URTNTMVpRTjJ0SlR6QkdTbFpqVDJWaFNIQk5lazFFVG1VeVNIQmllRzlxWWpOamMwWXJkblkwUlZsbVEzRjRVZ3BxVm5CM01GRjJWaXQyZWxKU1pWUk1Na3hLVVhCS1dUVlFXRVpoV1VkcGNWUXphbVZwZFVsUlVYbFdWbWxDTlhKaWNUUkZPRTVZWmxSRFdqUmFjbTh6Q2xjclYwSk9UMkpvUW10bE5VVmpTa1l2TkdsbVdqRnRXSEp1VEhOaGVHUmxUbVkzZFcwdmNrcHdibEZ1VFdOQ1Qyd3ZSelUxTVVOTFFuRXpNbEUzUkZJS1p6aFNaMmxFVDNSdWRteFpUeXREZFM4MmFVTTJhM2xtU3pJdlMyNU5abFZuZEhwcFluZEpSRUZSUVVKQmIwbENRVkZFU210TGQyUTFRMVF4VDFJNFRRcDFVMkpxV0ZoVE1HSlVhemw2ZVVoWllXODVTVFo2VUhobk5FdDBSR2QxZVRNemNYQXJRVTVIV1RJdlpWaHlVVUV2VUhab0wyeEJibFVyVWpGV05XbDRDbEp1TjFsdk1reEJiM0pLTm1WdU1tcHVjM2hEY0RSVk5VRjJVV0oyUW5NM1ZFRjVjVTE0UkZSTFpUY3dUalpCTUc5YVlYQXlhbnBIWTNwNGFUZzJabGdLU2s5NE9FeFBSRUZ5VVZBMGQybzNjMmwxUzFoamRtWlNVRFpXTldwMWFHVjVkVVZGTDFaWlVuZEpTR0ZDYlUxbFIzTmxUa041TjJkR04yOUtTMjkyU1FwU2R6TmxiblJ4WVhWck9HNUtjREU0TlhwMFVUQlFkblJyUVhWRldXODJUbkJ5VlRsdE0wSkJhbmxJTjA5c04xcFdNVEZhU0RGak9VeFRibEZzY3pSTENtOW9XRVJwUzBORVVGSkRNMFpVU2poVGJqSjVXREZ1YVZkV1RIY3JiVzh3UjFaSFUyOHpRVEp2ZG1oNFRGWnNXRXA1ZDNORE5XVkZhVXg2Y1RKNVZ6a0tRak1yVkVGeWVrSkJiMGRDUVZBd2NFcEZjM05vWVVOU05sQXdUWEJ3YkhrMVYwSnhka1ZxTUV4SU9FdzBTa2h3Y25WR2MyNW5iM3BVT0Zaek16ZExhd3BRUkdKb1JuSjZSMEpoYm1OdFFYSmxURlpJZW1ScmFUSXlaQ3RUVEVWUVRHTTFNa1paY2pJdldUTm1OalZMSzFGa1dGbDJVV0UzT0RaTmJFbGhhVXhLQ2l0SE1GbG5NVEF5Y1hGb2QwRjBPRzlaVHpaVU9IQktaemRPTDBGTlpGa3JjMDVIUWpCV1Z6aFpPRUpQVjBwR2JYQTFkVUZJVld0V1FXOUhRa0ZOTm5VS1FuVmhXWFU1TUZaWlRrRnJlR3BaYjI0clVuaGtOakpYSzFWelNVbGxVSE0wUTNCR1JVOXZZVEYxZEV4aVdrNUtVVE4yV2xSc2Jta3hhRVZMYlN0Sll3cEJSa2xpSzBsbFFrVkZTbTVIVTNOamRGa3dhRVp5VDNoSmFIZEpNblJUZUZsQ1l6TjNMM1JoU1ZCc1NUUlhUbVJ1ZDJNdk5FOVVaakpXYjA1M2ExaEtDbTh2V1c1MWFtZEVRVFZHWXpreFFrcExOblJhYWpCMlNqTXhkbE4zY1RSVGJscGpZMmxHV25wQmIwZEJZMmRuYlVsUVdtTXJiMkVyZFRjd1NFUm1aVU1LSzI1eldtUkpUVWg0TDBwQ2NGaG1kRWhtTUdVNGRHeExRbFpQVmt3MVNuRjZVVEV5WjBoR2VDczJSWGh0ZWs5WmJHMUdhakZxTUVkNGJqTkNSVzlwUWdvck1rbHdjQ3MyWkdveE1tcDRURVE1VGpnM2VHUjZSRlZoYkZsRUswMWxaemQzVFhKeFRVVkhMMlptTWxWNU5rMHJkVzlLVTFsWUwweEpiMVkyVEhNd0NsTnBjQzlqUnpjM1VEVlJTM05RVUdOaE1UWTFNR3RGUTJkWlJVRndTRGh6VEU5TVNrOTVhR3gxY1ZKaFVXZGlTbGtyWmxCcGFFVk5ZakpUVlc1TVZVOEtiMWhaUWtKWFRFSlNaSEowTlc1ck9GSmtiSEZIS3paSU1VWTFkVkJYVG5RclpYZGlVR0phUTJVMlpGWkNPVkU0ZURSMllscHlLMGd4TW5CUmVWWkpNd3B0WVUxbWVpOUZia295UjFSVGFWQmphVGhsVTNSdVpGaHdaVFJ1Wm5GWlJGbHpjWGd3ZUhwTEwxTndVME5OZFVRdk1HZDZNMlV4V2xsa2NqUmhaRmRXQ2t0bk1XbHJaazFEWjFsRlFYUlROMEprU2xGM1NVTkhiWEprYm5GMFRtRlBXa2s1YjNRMlRYQmhPVFZMVDJaalkzbFNUbGM0YmpoemFEVjZVblJOZDJ3S05sQnVXbmhwTjFKMVMxUTFhSE5PVjNGd2JXYzNTR05MUkdaRGRpOXdUMkZQTkZsVVUydDVTWEJsUWpkVmMxWkNlak5rUm1Gd1ZIa3JNa2hVYnpBNVpBcFRPRFJtYVhCelF5c3pUVXhSWVN0WWJtMXNLMVphYTFwRE1IbDRNM2xKVm1rMFkwMHhNelV5UzNGbFVXNXpaMU56UWtSQmFFYzBQUW90TFMwdExVVk9SQ0JTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo="
